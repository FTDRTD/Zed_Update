name: Build Windows Executable

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create PyInstaller spec file
        run: |
          echo "# -*- mode: python ; coding: utf-8 -*-" > ZedUpdater.spec
          echo "import sys" >> ZedUpdater.spec
          echo "from pathlib import Path" >> ZedUpdater.spec
          echo "" >> ZedUpdater.spec
          echo "block_cipher = None" >> ZedUpdater.spec
          echo "" >> ZedUpdater.spec
          echo "a = Analysis(" >> ZedUpdater.spec
          echo "    ['gui_launcher.pyw']," >> ZedUpdater.spec
          echo "    pathex=[]," >> ZedUpdater.spec
          echo "    binaries=[]," >> ZedUpdater.spec
          echo "    datas=[" >> ZedUpdater.spec
          echo "        ('config.example.json', '.')," >> ZedUpdater.spec
          echo "        ('main.py', '.')," >> ZedUpdater.spec
          echo "        ('updater', 'updater')," >> ZedUpdater.spec
          echo "    ]," >> ZedUpdater.spec
          echo "    hiddenimports=[" >> ZedUpdater.spec
          echo "        'PyQt5.sip'," >> ZedUpdater.spec
          echo "        'PyQt5.QtCore'," >> ZedUpdater.spec
          echo "        'PyQt5.QtWidgets'," >> ZedUpdater.spec
          echo "        'PyQt5.QtGui'," >> ZedUpdater.spec
          echo "        'win32api'," >> ZedUpdater.spec
          echo "        'win32con'," >> ZedUpdater.spec
          echo "        'win32file'," >> ZedUpdater.spec
          echo "        'win32gui'," >> ZedUpdater.spec
          echo "        'win32process'," >> ZedUpdater.spec
          echo "        'pywintypes'," >> ZedUpdater.spec
          echo "        'psutil'," >> ZedUpdater.spec
          echo "        'schedule'," >> ZedUpdater.spec
          echo "        'requests'," >> ZedUpdater.spec
          echo "        'chardet'," >> ZedUpdater.spec
          echo "        'dateutil'," >> ZedUpdater.spec
          echo "        'ctypes'," >> ZedUpdater.spec
          echo "        'ctypes.wintypes'," >> ZedUpdater.spec
          echo "    ]," >> ZedUpdater.spec
          echo "    hookspath=[]," >> ZedUpdater.spec
          echo "    hooksconfig={}," >> ZedUpdater.spec
          echo "    runtime_hooks=[]," >> ZedUpdater.spec
          echo "    excludes=[]," >> ZedUpdater.spec
          echo "    win_no_prefer_redirects=False," >> ZedUpdater.spec
          echo "    win_private_assemblies=False," >> ZedUpdater.spec
          echo "    cipher=block_cipher," >> ZedUpdater.spec
          echo "    noarchive=False," >> ZedUpdater.spec
          echo ")" >> ZedUpdater.spec
          echo "" >> ZedUpdater.spec
          echo "pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)" >> ZedUpdater.spec
          echo "" >> ZedUpdater.spec
          echo "exe = EXE(" >> ZedUpdater.spec
          echo "    pyz," >> ZedUpdater.spec
          echo "    a.scripts," >> ZedUpdater.spec
          echo "    a.binaries," >> ZedUpdater.spec
          echo "    a.zipfiles," >> ZedUpdater.spec
          echo "    a.datas," >> ZedUpdater.spec
          echo "    []," >> ZedUpdater.spec
          echo "    name='ZedUpdater'," >> ZedUpdater.spec
          echo "    debug=False," >> ZedUpdater.spec
          echo "    bootloader_ignore_signals=False," >> ZedUpdater.spec
          echo "    strip=False," >> ZedUpdater.spec
          echo "    upx=True," >> ZedUpdater.spec
          echo "    upx_exclude=[]," >> ZedUpdater.spec
          echo "    runtime_tmpdir=None," >> ZedUpdater.spec
          echo "    console=False," >> ZedUpdater.spec
          echo "    disable_windowed_traceback=True," >> ZedUpdater.spec
          echo "    argv_emulation=False," >> ZedUpdater.spec
          echo "    target_arch=None," >> ZedUpdater.spec
          echo "    codesign_identity=None," >> ZedUpdater.spec
          echo "    entitlements_file=None," >> ZedUpdater.spec
          echo ")" >> ZedUpdater.spec

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --clean ZedUpdater.spec

      - name: Test executable
        run: |
          # Test GUI launch (should not hang in headless environment)
          timeout 10 dist\ZedUpdater.exe --help || echo "Expected timeout in headless environment"
        timeout-minutes: 2
        continue-on-error: true

      - name: Get file size and info
        run: |
          Get-ChildItem dist\ZedUpdater.exe | Format-List Name, Length, CreationTime
          echo "File size: $((Get-Item dist\ZedUpdater.exe).Length / 1MB) MB"

      - name: Create portable package
        run: |
          mkdir ZedUpdater-portable
          copy dist\ZedUpdater.exe ZedUpdater-portable\
          copy config.example.json ZedUpdater-portable\config.json
          copy README.md ZedUpdater-portable\ -ErrorAction SilentlyContinue
          copy LICENSE ZedUpdater-portable\ -ErrorAction SilentlyContinue
          copy CHANGELOG.md ZedUpdater-portable\ -ErrorAction SilentlyContinue
          copy QUICK_START.md ZedUpdater-portable\ -ErrorAction SilentlyContinue

          # Create batch files for GUI usage (no console window)
          echo "@echo off" > ZedUpdater-portable\start-gui.bat
          echo "start /b ZedUpdater.exe --gui" >> ZedUpdater-portable\start-gui.bat

          echo "@echo off" > ZedUpdater-portable\start-gui-silent.bat
          echo "ZedUpdater.exe --gui" >> ZedUpdater-portable\start-gui-silent.bat

          # Create VBS script for completely silent launch
          echo "Set objShell = CreateObject(""WScript.Shell"")" > ZedUpdater-portable\start-gui-invisible.vbs
          echo "objShell.Run ""ZedUpdater.exe --gui"", 0, False" >> ZedUpdater-portable\start-gui-invisible.vbs
          echo "Set objShell = Nothing" >> ZedUpdater-portable\start-gui-invisible.vbs

          # Create batch file for console update with visible output
          echo "@echo off" > ZedUpdater-portable\update-only.bat
          echo "ZedUpdater.exe --update" >> ZedUpdater-portable\update-only.bat
          echo "pause" >> ZedUpdater-portable\update-only.bat

          # Create usage instructions
          echo "# ZedUpdater 使用说明" > ZedUpdater-portable\使用说明.txt
          echo "" >> ZedUpdater-portable\使用说明.txt
          echo "## 启动方式:" >> ZedUpdater-portable\使用说明.txt
          echo "1. start-gui.bat         - 启动GUI界面 (推荐)" >> ZedUpdater-portable\使用说明.txt
          echo "2. start-gui-silent.bat  - 启动GUI界面 (无控制台窗口)" >> ZedUpdater-portable\使用说明.txt
          echo "3. start-gui-invisible.vbs - 完全静默启动GUI" >> ZedUpdater-portable\使用说明.txt
          echo "4. update-only.bat       - 仅执行更新检查 (显示控制台)" >> ZedUpdater-portable\使用说明.txt
          echo "5. ZedUpdater.exe        - 直接运行程序 (默认GUI模式)" >> ZedUpdater-portable\使用说明.txt

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: ZedUpdater-Windows-Single-File
          path: dist/ZedUpdater.exe
          retention-days: 30

      - name: Upload portable package
        uses: actions/upload-artifact@v4
        with:
          name: ZedUpdater-Windows-Portable
          path: ZedUpdater-portable/
          retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-windows
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ZedUpdater-Windows-Portable
          path: ZedUpdater-Windows-Portable

      - name: Create release archive
        run: |
          cd ZedUpdater-Windows-Portable
          zip -r ../ZedUpdater-Windows-v${{ github.ref_name }}.zip .
          cd ..

      - name: Get release info
        id: release_info
        run: |
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "release_name=ZedUpdater ${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ZedUpdater-Windows-v${{ github.ref_name }}.zip
          name: ${{ steps.release_info.outputs.release_name }}
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
          generate_release_notes: true
          body: |
            ## ZedUpdater ${{ github.ref_name }}

            ### Windows Single-File Executable

            **下载说明：**
            - 下载 `ZedUpdater-Windows-v${{ github.ref_name }}.zip`
            - 解压到任意目录
            - 运行 `start-gui.bat` 启动图形界面
            - 或运行 `update-only.bat` 仅执行更新检查

            **系统要求：**
            - Windows 10/11 (x64)
            - 无需安装 Python 环境

            **文件说明：**
            - `ZedUpdater.exe` - 主程序（单文件，包含所有依赖，无控制台窗口）
            - `config.json` - 配置文件模板
            - `start-gui.bat` - 启动GUI界面 (推荐)
            - `start-gui-silent.bat` - 静默启动GUI界面
            - `start-gui-invisible.vbs` - 完全隐藏启动GUI
            - `update-only.bat` - 仅执行更新检查 (显示控制台)
            - `使用说明.txt` - 详细使用说明

            构建信息：Python 3.11, PyInstaller, Windows Latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
